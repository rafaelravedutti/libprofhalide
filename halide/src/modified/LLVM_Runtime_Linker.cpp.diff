diff --git a/src/LLVM_Runtime_Linker.cpp b/src/LLVM_Runtime_Linker.cpp
index 8c7fde53d..02039e6a3 100644
--- a/src/LLVM_Runtime_Linker.cpp
+++ b/src/LLVM_Runtime_Linker.cpp
@@ -112,6 +112,8 @@ DECLARE_CPP_INITMOD(osx_get_symbol)
 DECLARE_CPP_INITMOD(osx_host_cpu_count)
 DECLARE_CPP_INITMOD(osx_opengl_context)
 DECLARE_CPP_INITMOD(osx_yield)
+DECLARE_CPP_INITMOD(papi_profiler)
+DECLARE_CPP_INITMOD(papi_profiler_inlined)
 DECLARE_CPP_INITMOD(posix_allocator)
 DECLARE_CPP_INITMOD(posix_clock)
 DECLARE_CPP_INITMOD(posix_error_handler)
@@ -814,6 +816,7 @@ std::unique_ptr<llvm::Module> get_initial_module_for_target(Target t, llvm::LLVM
                     modules.push_back(get_initmod_windows_profiler(c, bits_64, debug));
                 } else {
                     modules.push_back(get_initmod_profiler(c, bits_64, debug));
+                    modules.push_back(get_initmod_papi_profiler(c, bits_64, debug));
                 }
             }
 
@@ -868,6 +871,9 @@ std::unique_ptr<llvm::Module> get_initial_module_for_target(Target t, llvm::LLVM
             if (t.has_feature(Target::Profile)) {
                 modules.push_back(get_initmod_profiler_inlined(c, bits_64, debug));
             }
+            if (t.has_feature(Target::PAPI)) {
+                modules.push_back(get_initmod_papi_profiler_inlined(c, bits_64, debug));
+            }
         }
 
         if (module_type == ModuleAOT) {
